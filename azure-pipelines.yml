trigger: none

pool:
  vmImage: windows-latest

parameters:
  - name: subscription
    type: string
    displayName: 'Environment Name'
    default: 'Dev'
    values:
      - Dev
      - Test
      - Stage

  - name: terraformation
    type: string
    displayName: 'Terraform'
    default: 'Create'
    values:
      - Create
      - Destroy

variables:
  - name: 'envname'
    value: ${{ if eq(parameters['subscription'], 'Dev') }}Dev${{ elseif eq(parameters['subscription'], 'Test') }}Test${{ else }}Stage${{ endif }}

  - name: 'plan'
    value: ${{ if eq(parameters['terraformation'], 'Destroy') }}-destroy${{ else }}${{ endif }}

  - name: 'Overridfiles'
    value: TF WEB APP/Environments/${{ parameters.subscription }}

steps:
- task: TerraformInstaller@0
  displayName: "Terraform install"
  inputs: 
    terraformVersion: '1.7.0'

- task: TerraformTaskV4@4
  displayName: "Terraform init"
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'Pay-As-You-Go(1)(f510d486-a17f-44f2-a1c4-63a7186e923c)'
    backendAzureRmResourceGroupName: 'azuredevops'
    backendAzureRmStorageAccountName: 'azuredevops4544'
    backendAzureRmContainerName: 'azuredevopscontainer'
    backendAzureRmKey: 'terraform.tfstate'
  
- task: TerraformTaskV4@4
  displayName: "Terraform ${{ parameters.terraformation }} plan"
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(Build.SourcesDirectory)/Terraform'
    commandOptions: '-out=terraform.tfplan'
    environmentServiceNameAzureRM: 'Pay-As-You-Go(1)(f510d486-a17f-44f2-a1c4-63a7186e923c)'

- task: PublishBuildArtifacts@1
  displayName: "publish build artifacts"
  inputs:
    pathtoPublish: '$(Build.SourcesDirectory)/terraform.tfplan'
    artifactName: 'terraformPlan'
    publishLocation: 'Container'    

- task: TerraformTaskV4@4
  displayName: "Terraform apply"
  inputs:
    provider: 'azurerm'
    command: 'apply'
    environmentServiceNameAzureRM: 'Pay-As-You-Go(1)(f510d486-a17f-44f2-a1c4-63a7186e923c)'

- task: TerraformTaskV4@4
  displayName: "Terraform destroy"
  inputs:
    provider: 'azurerm'
    command: 'destroy'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    environmentServiceNameAzureRM: 'Pay-As-You-Go(1)(f510d486-a17f-44f2-a1c4-63a7186e923c)'
  condition: eq('${{ parameters.terraformation }}', 'Destroy')
